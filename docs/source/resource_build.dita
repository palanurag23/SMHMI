<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<dita>
    <topic id="introduction">
        <title>Introduction</title>
        <body>
            <p>This section is focused on the use of the resource build tool, which can easily
                generate the required binary file from the user's source and description file.</p>
        </body>
    </topic>
    <topic id="source-files">
        <title>Source files</title>
        <body>
            <p>The source files are placed in the <codeph>resource</codeph> folder of each project.
                The files generally contain three types of images, icons and sounds, placed in the
                corresponding folders respectively. The build tool has certain requirements on the
                code format of the source files, as shown below.</p>
        </body>
        <topic id="format-of-image-file">
            <title>Format of Image file</title>
            <body>
                <p>The image files are generated by <codeph>GUI-Guide</codeph> and automatically
                    saved in the gui_guide/generated/images folder. The installation package for
                    GUI-Guide V1.3.0 can be found at this address: <xref
                        href="https://www.nxp.com/design/software/development-software/gui-guider"
                        format="html" scope="external">GUI-Guide Tool</xref></p>
                <p>There are two types of image file, one is big-endian and the other is
                    little-endian, so only data of the required image type must be generated.</p>
                <codeblock xml:space="preserve" outputclass="c">const uint8_t _Americano_250x250_map[] = {
#if LV_COLOR_DEPTH == 16 &amp;&amp; LV_COLOR_16_SWAP == 0
  0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, ...
#endif
#if LV_COLOR_DEPTH == 16 &amp;&amp; LV_COLOR_16_SWAP != 0
  0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, ...
#endif
};</codeblock>
            </body>
        </topic>
        <topic id="format-of-icon-file">
            <title>Format of Icon file</title>
            <body>
                <p>The format of icon file must to be consistent with the following.</p>
                <codeblock xml:space="preserve" outputclass="c">#ifndef _NXP_LOGO_H_
#define _NXP_LOGO_H_

#define NXP_LOGO_W 240
#define NXP_LOGO_H 86

static const unsigned short nxp_logo_240x86[] = {
  0xFDA4, 0xFD83, 0xFD83, 0xFD83, 0xFD83, 0xFD83, 0xFD83, 0xFD83, ...
};
#endif /* _NXP_LOGO_H_ */</codeblock>
            </body>
        </topic>
        <topic id="format-of-sound-file">
            <title>Format of Sound file</title>
            <body>
                <p>The format of sound file must to be consistent with the following.</p>
                <codeblock xml:space="preserve" outputclass="c">/**********************************************************************
* Written by WAVToCode
* FileName:			Can_I_help.h
* Signed:			Yes
* No. of channels:	1
* No. of samples:	14211
* Bits/Sample:		16
**********************************************************************/

#define WW_DETECT_EN_LEN  sizeof(ww_detect_en)

short ww_detect_en[14211] = {
  0,   0,   0,   1,  -2,   2,  -1,   0, /* 0-7 */
  1,  -1,   1,  -2,   2,  -1,   0,   1, /* 8-15 */
  ...
  2,   0,  -1}; /* 14208-14210 */</codeblock>
                <p><i><b>NOTE : The sound files can be generated using open source Audacity and
                            WavToCode, and the sampling rate is set to 16kHz, with 16 bits per
                            channel.</b></i></p>
            </body>
        </topic>
    </topic>
    <topic id="description-file">
        <title>Description file</title>
        <body>
            <p>Each application has a description file to contain all the resources to be built. The
                resource build tool reads this description file to build the final resource binary
                file.</p>
            <p>Here is the basic design for the description file. Each line represents a source file
                to build, and the format is <codeph>&lt;Type File_Name&gt;</codeph>.</p>
            <ul>
                <li><p>Type : <b>image/icon/sound</b></p></li>
                <li><p>File_Name : the path of source files <b>relative</b> to build tool.</p></li>
            </ul>
            <codeblock xml:space="preserve">// resource_build coffee_machine_resource.txt
/*
image ../../coffee_machine/resource/images/brewing_animimg_brewingf01.c
icon ../../coffee_machine/resource/icons/process_bar_240x14.h
sound ../../coffee_machine/resource/sounds/common/confirm_tone.h
...
*/</codeblock>
        </body>
    </topic>
    <topic id="resource-build-tool">
        <title>Resource build tool</title>
        <body>
            <p>Provide <codeph>bat</codeph> for Windows and <codeph>bash</codeph> for Linux to
                invoke corresponding build tools respectively to generate resource binary file and
                offset table file from source files and description file.</p>
            <p>The build tools are placed in <codeph>tools/resource_build</codeph> folder. And the
                bat and bash tools are placed in <codeph>resource</codeph> folder of each
                project.</p>
            <p>Modify the description file, binary file name and image file format in bat and bash
                tools to generate required binary file.</p>
            <ul>
                <li><p>description file: the name of description file;</p></li>
                <li><p>binary file name (optional): the name of generated binary file, default is
                        "resources.bin";</p></li>
                <li><p>image file format (optional): 0/1, default is 0 (LV_COLOR_16_SWAP ==
                    0);</p></li>
            </ul>
            <codeblock xml:space="preserve">&lt;build tool path&gt; &lt;description file&gt; &lt;binary file name&gt; &lt;image file format&gt;</codeblock>
            <p>Generate the binary file by <b>running project.bat</b> as administrator in Windows or
                executing <b>bash project.sh</b> in Linux command shell.</p>
        </body>
    </topic>
</dita>
