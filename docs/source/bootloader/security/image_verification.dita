<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="image-verification">
    <title>Image Verification</title>
    <prolog>
        <data name="sidebar_position" value="2"/>
    </prolog>
    <body>
        <p>Image Verification is a mechanism in which we validate that the image running has not
            been altered either by internal or external factors.</p>
    </body>
    <topic id="application-chain-of-trust">
        <title>Application chain of trust</title>
        <body>
            <p>The basis of the security architecture implemented in the SLN-TLHMI-IOT has signed
                application images. Signing requires the use of a Certificate Authority (CA). NXP
                has its own CA for signing applications at the factory, but the CA is not something
                that is shared with customers.</p>
            <p>The CA is used to create signing entities for applications as shown in the figure
                below. A certificate from the CA is stored in the SLN-TLHMI-IOTâ€™s filesystem and is
                used to verify the signatures of the signing entity certificates. In addition,
                locally stored certificates from the signing entities are used to verify the
                signature of firmware images coming in Over-the-Air (OTA) updates.</p>
            <codeblock xml:space="preserve" outputclass="{figure}">:align: center
:alt: Chain of trust

Chain of trust</codeblock>
        </body>
    </topic>
    <topic id="flash-image-configuration-area-fica-and-image-verification">
        <title>Flash Image Configuration Area (FICA) and Image Verification</title>
        <body>
            <p>The FICA table is a section inside the filesystem that is responsible for describing
                the images that will be booted. It contains information about the image and
                signatures of the applications that will be used to ensure that only verified
                firmware is executed. This ensures malicious images cannot be executed without it
                being signed with the certificate authority and certificate that is programmed into
                the filesystem. Before any image is jumped to, it is first verified using the
                signature from its associated FICA entry.</p>
            <ul>
                <li><p>The bootloader uses the AppA FICA entry to validate the AppA image</p></li>
                <li><p>The bootloader uses the AppB FICA entry to validate the AppB image</p></li>
            </ul>
            <codeblock xml:space="preserve">
As mentioned when describing the application banks, `Bank C` is not used for redundancy in the update mechanism, as such, it has no entry into the FICA table. The purpose of the bank is only to showcase all 3 application without the need of reflashing the board.</codeblock>
            <p>Developers can turn on the image verification and reprogram the bootloader as shown
                in the Turning on image verification section. To decrease the risks of an attack,
                have Image Verification on.</p>
        </body>
    </topic>
</topic>
